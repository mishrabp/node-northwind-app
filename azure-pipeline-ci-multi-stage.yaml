# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript 

# Pipelibe only build docker image and uploads to Azure Container Registry @113136 NTT Azure Accoount

trigger:
- main

#what to clean up before the job runs (outputs | resources | all)
pool:
  name: "MyBuildAgents"
  vmImage: ubuntu-latest
  demand: node.js

variables:
- group: PipelineVariableGroup

stages:

- stage: Build
  displayName: "Compile Code"
  jobs:
  - job: Compile
    displayName: 'Compile NPM Code' 
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install NodeJS Runtime'
    #Build the NodeJS code which will be deployed to QA "Azure App Service"
    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'
    - task: CopyFiles@2
      displayName: 'Copy application code to www folder'
      inputs:
        preserveTimestamp: true
        cleanTargetFolder: true  
        sourceFolder: '$(System.DefaultWorkingDirectory)'
        targetFolder: '$(build.artifactstagingdirectory)/www'
    - task: CopyFiles@2
      displayName: 'Copy terrraform files to terraform folder'
      inputs:
        SourceFolder: terraform
        TargetFolder: '$(build.artifactstagingdirectory)/terraform'
    - task: ArchiveFiles@2
      displayName: 'Create a deployable zip file from the www folder'
      inputs:
        rootFolderOrFile: '$(build.artifactstagingdirectory)/www'
        includeRootFolder: false        
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifacts & Binaries to the drop folder'
      inputs:
        targetPath: '$(build.artifactstagingdirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'


- stage: QA
  displayName: 'Deploy Code to QA Web App Service'
  pool:
    name: "MyBuildAgents"
    vmImage: ubuntu-latest
    demand: node.js
  dependsOn: Build
  variables: 
    Environment: QA
  jobs:
  - template: azure-subpipeline-deploy-to-appservice.yaml
    parameters:
      environment: ${{ variables.environment }} 
      webAppName: '$(appServicePrefix)-qa'
      subscription: $(subscription)

- stage: Production
  displayName: 'Deploy Code to Production Kubernetes Cluster'
  pool:
    name: "MyBuildAgents"
    vmImage: ubuntu-latest
    demand: node.js
#  dependsOn: QA
  variables: 
    Environment: Production
  jobs:
  - template: azure-subpipeline-deploy-to-k8-cluster.yaml
    parameters:
      environment: ${{ variables.environment }} 
      webAppName: '$(appServicePrefix)-prod'
      subscription: $(subscription)

